#background-video {
  position: fixed;
  z-index: -1;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  object-fit: cover;
}

#whole-page-container-plus-sidebar {
  display: flex;
  padding: 200px;
  /* adjust padding to shrink/grow contents */
  justify-content: center;
}

#side-bar {
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  font-size: 0.5em;
  padding-top: 80px;
  gap: 25px;
  width: 60px;
  background-color: #276da2f4;
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
}

#side-bar-icon {
  padding-left: 5px;
  font-size: 0.8em;
}

#parent-of-flex-grid-container {
  display: flex;
  flex: 1;
  background-color: transparent;
  gap: 10px;
}

#flex-grid-containers-total {
  display: flex;
  flex: 1;
  flex-direction: column;
  background-color: transparent;
  gap: 10px;
}

#flex-grid-without-sidebar {
  display: flex;
  flex-direction: column;
  flex: 1;
  justify-content: center;
  background-color: #78aacdc0;
  gap: 10px;
  padding: 30px 30px 30px 30px;
  /* adjust padding to shrink/grow contents */
  border-top-right-radius: 15px;
  border-bottom-right-radius: 15px;
}

#flex-grid-row-w-search-bar {
  display: flex;
  flex: 1;
  height: 30px;
  /* min-height: 4%; */
  background-color: transparent;
  gap: 10px;
}

#flex-grid-row {
  display: flex;
  flex: 1;
  min-height: 44%;
  background-color: transparent;
  gap: 10px;
}

#current-weather-box {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  min-width: 200px;
  max-width: 250px;
  padding: 20px;
  align-items: center;
  text-align: center;
  background-color: #6a6f8d;
  box-sizing: border-box;
  border-radius: 20px;
  border-color: #000000;
  border: 8px solid #000000;
  z-index: 2;
}

#forcast-box {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  min-width: 200px;
  max-width: 250px;
  padding: 20px;
  text-align: center;
  background-color: #0d658e;
  box-sizing: border-box;
  border-radius: 20px;
  border-color: #000000;
  border: 8px solid #000000;
  z-index: 2;
}

#summary-box {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  min-width: 510px;
  max-width: 1100px;
  padding: 20px;
  text-align: center;
  background-color: #02137e;
  box-sizing: border-box;
  border-radius: 20px;
  border-color: #000000;
  border: 8px solid #000000;
  z-index: 2;
}

#map-uv-container {
  display: flex;
  flex-direction: row;
  flex: 1;
  gap: 10px;
}

#map-box {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  min-width: 300px;
  max-width: 687px;
  padding: 20px;
  text-align: center;
  background-color: #36057b;
  box-sizing: border-box;
  border-radius: 20px;
  border-color: #000000;
  border: 8px solid #000000;
  z-index: 2;
}

#map-box-invisible {
  display: flex;
  flex: 1;
  flex-direction: column;
  min-width: 400px;
  max-width: 687px;
  height: 30px;
  padding: 20px;
  background-color: transparent;
  box-sizing: border-box;
}

#humidity-uv-box {
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
  min-width: 100px;
  max-width: 170px;
  padding: 20px;
  text-align: center;
  background-color: #514141;
  box-sizing: border-box;
  border-radius: 20px;
  border-color: #000000;
  border: 8px solid #000000;
  z-index: 2;
}

#humidity-uv-box-invisible {
  display: flex;
  flex: 1;
  flex-direction: column;
  min-width: 100px;
  max-width: 170px;
  padding: 20px;
  background-color: transparent;
  box-sizing: border-box;
}

#search-bar-container {
  display: flex;
  flex: 1;
  flex-direction: row;
  justify-content: center;
  min-width: 200px;
  max-width: 250px;
  height: 46px;
  align-items: center;
  text-align: center;
  background-color: #276da2be;
  box-sizing: border-box;
  border-radius: 10px;
  border-color: #000000;
  border: 5px solid #000000;
  position: relative;
  padding: 20px;
  z-index: 2;
}

#search-city-text-field-container {
  display: flex;
  flex: 1;
  justify-content: center;
  padding-left: 40px;
  align-items: center;
  text-align: left;
  position: relative;
  background-color: transparent;
}

#search-city-text-field {
  display: flex;
  flex: 1;
  justify-content: center;
  height: 30px;
  max-width: 200px;
  font-size: 0.65em;
  font-weight: 600;
  text-transform: capitalize;
  color: #000000;
  background-color: transparent;
  border-color: transparent;
  outline: none;
  padding-left: 20px;
}

#search-city-text-field::placeholder {
  color: #ffffffba;
}

#search-icon-button {
  position: relative;
  right: 235px;
  border: #000000;
  align-items: center;
  background-color: transparent;
  font-size: 0.5em;
  font-weight: 500;
  font-family: inherit;
  line-height: 30%;
  cursor: pointer;
  transition: text-shadow 0.3s ease-in-out, border-color 0.3s ease-in-out,
    box-shadow 0.3s ease-in-out;
}

#form-container {
  display: flex;
  justify-content: flex-start;
}

#form {
  display: flex;
}

.capitalize-text {
  text-transform: capitalize;
}

@media (max-width: 900px) {
  #flex-grid-row,
  #flex-grid-row-w-search-bar,
  #map-uv-container {
    flex-direction: column;
    /* gap: 20px; */
  }
}

/* justify-content: {
  flex-start: Items align to the left side of the container.
  flex-end: Items align to the right side of the container.
  center: Items align at the center of the container.
  space-between: Items display with equal spacing between them.
  space-around: Items display with equal spacing around them.
} */

/* align-items: {
  flex-start: Items align to the top of the container.
  flex-end: Items align to the bottom of the container.
  center: Items align at the vertical center of the container.
  baseline: Items display at the baseline of the container.
  stretch: Items are stretched to fit the container.
} */

/* Another property you can apply to individual items is align-self.
This property accepts the same values as align-items and its value for the specific item. */

/* flex-direction: {
  row: Items are placed the same as the text direction.
  row-reverse: Items are placed opposite to the text direction.
  column: Items are placed top to bottom.
  column-reverse: Items are placed bottom to top.
} */

/* order: {
  order will move objects from left to right/up and down.
  
  Example: 

  .red-frog {
    order: -1;
  }
} */
